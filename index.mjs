import axios from 'axios';
import { Telegraf } from 'telegraf';
import NodeID3 from 'node-id3';
import dotenv from 'dotenv';

dotenv.config();

const bot = new Telegraf(process.env.TG_BOT_TOKEN);

const getGenre = (genre) => {
  let result = '';

  switch (genre) {
    case '(18)':
      result = 'Techno';
      break;
    case '(127)':
      result = 'DrumBass';
      break;
    default:
      result = genre;
  }

  return result.split(/\s|\&/).join('');
};

const launchBot = () => {
  bot
    .launch()
    .then(() => console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!'))
    .catch((e) => console.log(`–ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${e.message}`));
};

const getRemixLabel = (fileInfo) => fileInfo.title.toLowerCase().includes('remix')
  ? '\nüéõ #REMIX'
  : '';

const getBestLabel = (ctx) => ctx.update.message.caption?.includes('/best')
  ? '\nüî•#BEST'
  : '';

const getRemixerArtist = (matchRemixerArtist) => matchRemixerArtist
  ? matchRemixerArtist[0]
    .replaceAll(/\(|\)/gi, '')
    .split(/\s|, |\&|feat|feat./)
    .filter(word => word.toLowerCase() !== 'remix')
  : [];

const getArtists = (fileInfo, remixerArtist) => fileInfo.artist
  .split(/\&|feat|feat.|, /)
  .concat(remixerArtist)
  .map(artist => `#${artist.trim().replaceAll(/\W|\s/gi, '')}`)
  .join(' ');

bot.on('message', (ctx) => {
  if (ctx.update.message.text === '/start') {
    ctx.telegram.sendMessage(ctx.chat.id, '–î–æ–±–∞–≤—å—Ç–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã.');
    return;
  }

  if (!ctx.update.message.audio) {
    ctx.telegram.sendMessage(ctx.chat.id, '–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞');
    return;
  }

    ctx.telegram
      .getFileLink(ctx.update.message.audio.file_id)
      .then(res => {
        axios
          .get(res.href, {
            responseType: "arraybuffer",
          })
          .then((file) => NodeID3.read(file.data))
          .then(fileInfo => {
            const remixLabel = getRemixLabel(fileInfo);
            const bestLabel = getBestLabel(ctx);
            const matchRemixerArtist = fileInfo.title.match(/\((.*?)\)/gi);
            const remixerArtist = getRemixerArtist(matchRemixerArtist);
            const artists = getArtists(fileInfo, remixerArtist);
            const genre = fileInfo.genre ? `\n–°—Ç–∏–ª—å: #${getGenre(fileInfo.genre)}` : '';

            ctx.telegram.sendAudio(
              ctx.chat.id,
              ctx.update.message.audio.file_id,
              {
                caption: `${bestLabel}${remixLabel}\n–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: ${artists}${genre}`,
              },
            );
          });
      })
      .catch((e) => {
        ctx.telegram.sendMessage(ctx.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.');
        console.log(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${e.message}`);
      });
});

launchBot();
